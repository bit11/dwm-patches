--- ../config.def.h
+++ config.h
@@ -1,71 +1,125 @@
-/* See LICENSE file for copyright and license details. */
+
+/* patches */
+#include "push.c"
+#include "X11/XF86keysym.h"
+#include "patches/colours/lakeside.h"
+//#include "patches/colours/railscasts-dark.h"
 
 /* appearance */
-static const char font[]            = "-*-terminus-medium-r-*-*-16-*-*-*-*-*-*-*";
-static const char normbordercolor[] = "#444444";
-static const char normbgcolor[]     = "#222222";
-static const char normfgcolor[]     = "#bbbbbb";
-static const char selbordercolor[]  = "#005577";
-static const char selbgcolor[]      = "#005577";
-static const char selfgcolor[]      = "#eeeeee";
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const char font[]            = "-*-sm4tik-medium-r-*-*-16-*-*-*-*-*-*-*" "," "-misc-termsyn-medium-r-normal--11-79-100-100-c-60-iso8859-1" ;     
+static const unsigned int borderpx  = 2;        /* border pixel of windows */
+static const unsigned int gappx		= 4;		/* gap pixel between windows */
+static const unsigned int systrayspacing = 2;   /* systray spacing */
 static const unsigned int snap      = 32;       /* snap pixel */
+static const Bool showsystray       = True;     /* False means no systray */
 static const Bool showbar           = True;     /* False means no bar */
 static const Bool topbar            = True;     /* False means bottom bar */
 
 /* tagging */
-static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+static const char *tags[] = { " web >", "docs >", "work >", "misc >", "mail" };
 
 static const Rule rules[] = {
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            True,        -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       False,       -1 },
+	/* class     	 instance    title       tags mask     isfloating   monitor */
+	{ "Gimp",   	  NULL,       NULL,       1 << 3,       True,        -1 },
+	{ "Thunderbird",  NULL,		  NULL,       1 << 4,       False,       -1 },
+	{ "com-mathworks-util-PostVMInit",NULL,	 	  NULL,		  1 << 3,		True,		 -1 },
+	{ "mplayer",      NULL,	 	  NULL,		  0,	     	True,		 -1 },
+    { "Spotify",      NULL,       NULL,       1 << 3,       True,        -1 },
+    { "urxvtc",        NULL,       "mutt",     1 << 4,       True,        -1 },
 };
 
 /* layout(s) */
-static const float mfact      = 0.55; /* factor of master area size [0.05..0.95] */
+static const float mfact      = 0.50; /* factor of master area size [0.05..0.95] */
 static const int nmaster      = 1;    /* number of clients in master area */
 static const Bool resizehints = True; /* True means respect size hints in tiled resizals */
 
 static const Layout layouts[] = {
 	/* symbol     arrange function */
-	{ "[]=",      tile },    /* first entry is default */
-	{ "><>",      NULL },    /* no layout function means floating behavior */
-	{ "[M]",      monocle },
+	{ "[t]",      tile },    /* first entry is default */
+	{ "[f]",      NULL },    /* no layout function means floating behavior */
+	{ "[m]",      monocle },
+	{ "[d]",	  deck },
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
 	{ MODKEY|ShiftMask,             KEY,      tag,            {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask|ShiftMask, KEY,      toggletag,      {.ui = 1 << TAG} },
 
-/* helper for spawning shell commands in the pre dwm-5.0 fashion */
-#define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
+/* for simple spawning of commands */
+#define CMD(cmd) { .v = (const char*[]){ "/bin/bash", "-c", cmd, NULL } }
 
 /* commands */
-static const char *dmenucmd[] = { "dmenu_run", "-fn", font, "-nb", normbgcolor, "-nf", normfgcolor, "-sb", selbgcolor, "-sf", selfgcolor, NULL };
-static const char *termcmd[]  = { "uxterm", NULL };
+static const char scratchpadname[] = "scratchy";
+static const char *scratchpadcmd[] = { "urxvtc", "-title", scratchpadname, NULL };
+static const char *dmenu[]       = { "dmenu_run", "-fn", font, "-nb", normbgcolor, "-nf", normfgcolor, "-sb", selbgcolor, "-sf", selfgcolor, NULL };
+static const char *term[]        = { "urxvtc", NULL };
+static const char *ss[]      	 = { "/bin/bash", "-c", "scrot /media/data/Pictures/Screenshots/%Y-%m-%d-%T.png && notify-send 'Screenshot captured and saved'", NULL };
+static const char *ssarea[]  	 = { "/bin/bash", "-c", "sleep 0.1 && scrot -s /media/data/Pictures/Screenshots/%Y-%m-%d-%T.png && notify-send 'Screenshot captured and saved'", NULL };
+static const char *ranger[]      = { "urxvtc", "-geometry", "150x40", "-title", scratchpadname, "-e", "ranger", NULL };
+static const char *web[] 		 = { "chromium", NULL };
+//static const char *email[] 		 = { "urxvtc", "-e", "mutt", NULL };
+static const char *email[] 		 = { "thunderbird", NULL };
+static const char *matlab[]  	 = { "/bin/bash", "-c", "wmname LG3D && matlab -desktop -nosplash", NULL };
+static const char *music[] 		 = { "urxvtc", "-title", scratchpadname, "-e", "ncmpcpp", NULL };
+static const char *news[]	     = { "urxvtc", "-title", scratchpadname, "-e", "snownews", "--update", NULL };
+static const char *lock[]  		 = { "slock", NULL };
+static const char *closedwm[] 	 = { "killall", "startdwm", NULL };
+static const char *power[] 		 = { "systemctl", "poweroff", NULL };
+static const char *susp[] 		 = { "systemctl", "suspend", NULL };
+static const char *voldn[] 		 = { "amixer", "-q", "set", "Master", "5%-", NULL };
+static const char *volup[] 		 = { "amixer", "-q", "set", "Master", "5%+", "unmute", NULL };
+static const char *voloff[] 	 = { "amixer", "-q", "set", "Master", "toggle", NULL };
+static const char *play[] 		 = { "/home/bit11/bin/musickeys", "play", NULL };
+static const char *stop[] 		 = { "/home/bit11/bin/musickeys", "play", NULL };
+static const char *next[] 		 = { "/home/bit11/bin/musickeys", "next", NULL };
+static const char *prev[] 		 = { "/home/bit11/bin/musickeys", "prev", NULL };
+//static const char *play[] 		 = { "mpc", "play", NULL };
+//static const char *stop[] 		 = { "mpc", "stop", NULL };
+//static const char *next[] 		 = { "mpc", "next", NULL };
+//static const char *prev[] 		 = { "mpc", "prev", NULL };
 
 static Key keys[] = {
 	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
+    { MODKEY,                       XK_x,      togglescratch,  {.v = scratchpadcmd } },
+	{ MODKEY,                       XK_r,      spawn,          {.v = dmenu } },
+	{ MODKEY,                       XK_Return, spawn,          {.v = term } },
+	{ 0,                            XK_Print,  spawn,          {.v = ss} },
+	{ MODKEY,           			XK_Print,  spawn,          {.v = ssarea} },
+	{ MODKEY|ControlMask,           XK_r,      spawn,          {.v = ranger } },
+	{ MODKEY|ControlMask,           XK_w,      spawn,          {.v = web } },
+	{ MODKEY|ControlMask,           XK_q,      spawn,          {.v = email } },
+	{ MODKEY|ControlMask,           XK_a,      spawn,          {.v = matlab} },
+	{ MODKEY|ControlMask,           XK_m,      spawn,          {.v = music } },
+	{ MODKEY|ControlMask,           XK_n,      spawn,          {.v = news } },
+	{ MODKEY|ShiftMask,             XK_l,      spawn,          {.v = lock} },
+	{ MODKEY|ShiftMask,             XK_q,      spawn,          {.v = closedwm } },
+	{ MODKEY|ShiftMask,             XK_p,      spawn,          {.v = power } },
+	{ MODKEY|ShiftMask,             XK_s,      spawn,          {.v = susp } },
+	{ 0,            XF86XK_AudioLowerVolume,   spawn,          {.v = voldn } },
+	{ 0,            XF86XK_AudioRaiseVolume,   spawn,          {.v = volup } },
+	{ 0,            XF86XK_AudioMute,          spawn,          {.v = voloff } },
+	{ ControlMask,                  0x03b,     spawn,          {.v = play } },
+	{ ControlMask,                  0x027,     spawn,          {.v = stop } },
+	{ ControlMask,                  0x02e,     spawn,          {.v = next } },
+	{ ControlMask,                  0x02c,     spawn,          {.v = prev } },
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
 	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
-	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
+	{ MODKEY,                       XK_o,      incnmaster,     {.i = -1 } },
 	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
 	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
-	{ MODKEY,                       XK_Return, zoom,           {0} },
+	{ MODKEY|ControlMask,           XK_j,      zoom,           {0} },
 	{ MODKEY,                       XK_Tab,    view,           {0} },
 	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,                       XK_d,      setlayout,      {.v = &layouts[3]} },
 	{ MODKEY,                       XK_space,  setlayout,      {0} },
 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
@@ -74,6 +128,9 @@ static Key keys[] = {
 	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
 	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
 	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_r,      quit,           {0} },
+	{ MODKEY|ShiftMask,             XK_k,      pushup,         {0} },
+	{ MODKEY|ShiftMask,             XK_j,      pushdown,       {0} },
 	TAGKEYS(                        XK_1,                      0)
 	TAGKEYS(                        XK_2,                      1)
 	TAGKEYS(                        XK_3,                      2)
@@ -93,7 +150,7 @@ static Button buttons[] = {
 	{ ClkLtSymbol,          0,              Button1,        setlayout,      {0} },
 	{ ClkLtSymbol,          0,              Button3,        setlayout,      {.v = &layouts[2]} },
 	{ ClkWinTitle,          0,              Button2,        zoom,           {0} },
-	{ ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } },
+	{ ClkStatusText,        0,              Button2,        spawn,          {.v = term } },
 	{ ClkClientWin,         MODKEY,         Button1,        movemouse,      {0} },
 	{ ClkClientWin,         MODKEY,         Button2,        togglefloating, {0} },
 	{ ClkClientWin,         MODKEY,         Button3,        resizemouse,    {0} },
